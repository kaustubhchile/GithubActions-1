# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

# name of the workflow to describe what the workflow is doing
name: Java CI with Gradle

# Every time an event or events happen we can trigger the workflow.
# This section defines event ie. name of github event that triggers the following workflow
on:
  push: # whenever someone pushes the master branch we want to trigger the workflow
    branches: ["master"]
  pull_request: # whenever someone pulls the master branch we want to trigger the workflow
    branches: ["master"]

# Groups a set of actions that will be executed
# Events trigger a chain of actions that are executed here
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      # Whenever we want to build application or run test, we need to check out the repository or code first.
      - uses: actions/checkout@v4 # selects the action. actions path in github were predefined/pre-created actions are hosted
      # in the above case, checkout is the action whose version is 4

      - name: Set up JDK 17
        uses: actions/setup-java@v4 # Prepares your environment with JAVA
        with:
          java-version: "17"
          distribution: "temurin"

      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
      # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
